//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebPrinter.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Web.Mvc;
    using System.Linq;

    public partial class Finishing
    {
        private PrinterStockEntities db = new PrinterStockEntities();

        public int id { get; set; }

        [Display(Name="Topic")]
        public string topic { get; set; }

        [Display(Name = "Detail")]
        public string detail { get; set; }

        [Display(Name = "Type")]
        public Nullable<int> type_id { get; set; }

        [Display(Name = "Unit")]
        public Nullable<int> unit_id { get; set; }

        [Display(Name = "จำนวน(1)")]
        public Nullable<int> quantity1 { get; set; }

        [Display(Name = "Piece")]
        public Nullable<double> price1 { get; set; }

        [Display(Name = "จำนวน(2)")]
        public Nullable<int> quantity2 { get; set; }

        [Display(Name = "Piece")]
        public Nullable<double> price2 { get; set; }

        [Display(Name = "จำนวน(3)")]
        public Nullable<int> quantity3 { get; set; }

        [Display(Name = "Piece")]
        public Nullable<double> price3 { get; set; }

        public IEnumerable<SelectListItem> GetTypeFinishing
        {
            get
            {
                var allFlavors = db.Type_Finishing.OrderBy(f => f.id).Select(f => new SelectListItem
                {
                    Value = f.id.ToString(),
                    Text = f.type_finishing
                });
                return allFlavors;
            }
        }

        public IEnumerable<SelectListItem> DefaultTypeItem
        {
            get
            {
                return Enumerable.Repeat(new SelectListItem
                {
                    Value = "0",
                    Text = "-- เลือกประเภท --"
                }, count: 1);
            }
        }

        public IEnumerable<SelectListItem> GetUnitFinishing
        {
            get
            {
                var allFlavors = db.Units.OrderBy(f => f.id).Select(f => new SelectListItem
                {
                    Value = f.id.ToString(),
                    Text = f.unit
                });
                return allFlavors;
            }
        }

        public IEnumerable<SelectListItem> DefaultUnitItem
        {
            get
            {
                return Enumerable.Repeat(new SelectListItem
                {
                    Value = "0",
                    Text = "-- เลือก Unit --"
                }, count: 1);
            }
        }

        public Dictionary<string, string> mapUnit 
        {
            get 
            {
                return (from x in db.Finishings
                           from y in db.Type_Finishing.Where(y => y.id == x.type_id).DefaultIfEmpty()
                           orderby x.id ascending
                           select new
                           {
                               id = x.id.ToString(),
                               type = y.type_finishing.Trim()
                           }).ToDictionary(v => v.id, v => v.type);    
            }
        }

        public IEnumerable<SelectListItem> FinishingItems
        {
            get
            {
                var all = db.Finishings.OrderBy(f => f.id).Select(f => new SelectListItem
                {
                    Value = f.id.ToString(),
                    Text = f.topic
                }).ToList();
                return all;
            }
        }
    }

    public class TempResult
    {
        public int id { get; set; }

        [Display(Name="Topic")]
        public string topic { get; set; }

        [Display(Name = "Detail")]
        public string detail { get; set; }

        [Display(Name = "จำนวน(1)")]
        public Nullable<int> quantity1 { get; set; }

        [Display(Name = "Piece")]
        public Nullable<double> price1 { get; set; }

        [Display(Name = "จำนวน(2)")]
        public Nullable<int> quantity2 { get; set; }

        [Display(Name = "Piece")]
        public Nullable<double> price2 { get; set; }

        [Display(Name = "จำนวน(3)")]
        public Nullable<int> quantity3 { get; set; }

        [Display(Name = "Piece")]
        public Nullable<double> price3 { get; set; }

        [Display(Name = "Unit")]
        public string unit { get; set; }

        [Display(Name = "Type")]
        public string type_finishing { get; set; }
    }

    public class EditFinishing
    {
        public EditFinishing() { }

        public Finishing EditFinishingModel(EditFinishing model)
        {
            Finishing f = new Finishing();
            f.detail = model.detail;
            f.id = model.id;
            f.price1 = model.price1;
            f.price2 = model.price3;
            f.price3 = model.price3;
            f.quantity1 = model.quantity1;
            f.quantity2 = model.quantity2;
            f.quantity3 = model.quantity3;
            f.topic = model.topic;
            f.type_id = model.type_id;
            f.unit_id = model.unit_id;
            return f;
        }

        public int id { get; set; }

        [Display(Name="Topic")]
        [Required(ErrorMessage="กรุณาระบุหัวข้อ")]
        public string topic { get; set; }

        [Display(Name = "Detail")]
        [Required(ErrorMessage = "กรุณาระบุรายละเอียด")]
        public string detail { get; set; }

        [Display(Name = "Type")]
        [Required(ErrorMessage = "เลือก Type")]
        public Nullable<int> type_id { get; set; }

        [Display(Name = "Unit")]
        [Required(ErrorMessage = "เลือก Unit")]
        public Nullable<int> unit_id { get; set; }

        [Display(Name = "จำนวน(1)")]
        [RegularExpression(@"^\d+$", ErrorMessage = "ระบุเป็นตัวเลข")]
        public Nullable<int> quantity1 { get; set; }

        [Display(Name = "Piece")]
        [RegularExpression(@"^\d*\.?\d*$", ErrorMessage = "ระบุเป็นตัวเลข หรือทศนิยม")]
        public Nullable<double> price1 { get; set; }

        [Display(Name = "จำนวน(2)")]
        [RegularExpression(@"^\d+$", ErrorMessage = "ระบุเป็นตัวเลข")]
        public Nullable<int> quantity2 { get; set; }

        [Display(Name = "Piece")]
        [RegularExpression(@"^\d*\.?\d*$", ErrorMessage = "ระบุเป็นตัวเลข หรือทศนิยม")]
        public Nullable<double> price2 { get; set; }

        [Display(Name = "จำนวน(3)")]
        [RegularExpression(@"^\d+$", ErrorMessage = "ระบุเป็นตัวเลข")]
        public Nullable<int> quantity3 { get; set; }

        [Display(Name = "Piece")]
        [RegularExpression(@"^\d*\.?\d*$", ErrorMessage = "ระบุเป็นตัวเลข หรือทศนิยม")]
        public Nullable<double> price3 { get; set; }
    }

    public class CreateFinishing
    {
        private PrinterStockEntities db = new PrinterStockEntities();

        public CreateFinishing() { }

        public Finishing CreateFinishingModel(CreateFinishing model)
        {
            Finishing f = new Finishing();
            f.detail = model.detail;
            f.id = model.id;
            f.price1 = model.price1;
            f.price2 = model.price3;
            f.price3 = model.price3;
            f.quantity1 = model.quantity1;
            f.quantity2 = model.quantity2;
            f.quantity3 = model.quantity3;
            f.topic = model.topic;
            f.type_id = model.type_id;
            f.unit_id = model.unit_id;
            return f;
        }

        public int id { get; set; }

        [Display(Name = "Topic")]
        [Required(ErrorMessage = "กรุณาระบุหัวข้อ")]
        public string topic { get; set; }

        [Display(Name = "Detail")]
        [Required(ErrorMessage = "กรุณาระบุรายละเอียด")]
        public string detail { get; set; }

        [Display(Name = "Type")]
        [Required(ErrorMessage = "เลือก Type")]
        public Nullable<int> type_id { get; set; }

        [Display(Name = "Unit")]
        [Required(ErrorMessage = "เลือก Unit")]
        public Nullable<int> unit_id { get; set; }

        [Display(Name = "จำนวน(1)")]
        [RegularExpression(@"^\d+$", ErrorMessage = "ระบุเป็นตัวเลข")]
        public Nullable<int> quantity1 { get; set; }

        [Display(Name = "Piece")]
        [RegularExpression(@"^\d*\.?\d*$", ErrorMessage = "ระบุเป็นตัวเลข หรือทศนิยม")]
        public Nullable<double> price1 { get; set; }

        [Display(Name = "จำนวน(2)")]
        [RegularExpression(@"^\d+$", ErrorMessage = "ระบุเป็นตัวเลข")]
        public Nullable<int> quantity2 { get; set; }

        [Display(Name = "Piece")]
        [RegularExpression(@"^\d*\.?\d*$", ErrorMessage = "ระบุเป็นตัวเลข หรือทศนิยม")]
        public Nullable<double> price2 { get; set; }

        [Display(Name = "จำนวน(3)")]
        [RegularExpression(@"^\d+$", ErrorMessage = "ระบุเป็นตัวเลข")]
        public Nullable<int> quantity3 { get; set; }

        [Display(Name = "Piece")]
        [RegularExpression(@"^\d*\.?\d*$", ErrorMessage = "ระบุเป็นตัวเลข หรือทศนิยม")]
        public Nullable<double> price3 { get; set; }

        public IEnumerable<SelectListItem> GetTypeFinishing
        {
            get
            {
                var allFlavors = db.Type_Finishing.Select(f => new SelectListItem
                {
                    Value = f.id.ToString(),
                    Text = f.type_finishing
                });
                return allFlavors;
            }
        }

        public IEnumerable<SelectListItem> DefaultTypeItem
        {
            get
            {
                return Enumerable.Repeat(new SelectListItem
                {
                    Value = "0",
                    Text = "-- เลือกประเภท --"
                }, count: 1);
            }
        }

        public IEnumerable<SelectListItem> GetUnitFinishing
        {
            get
            {
                var allFlavors = db.Units.Select(f => new SelectListItem
                {
                    Value = f.id.ToString(),
                    Text = f.unit
                });
                return allFlavors;
            }
        }

        public IEnumerable<SelectListItem> DefaultUnitItem
        {
            get
            {
                return Enumerable.Repeat(new SelectListItem
                {
                    Value = "0",
                    Text = "-- เลือก Unit --"
                }, count: 1);
            }
        }
    }
}
